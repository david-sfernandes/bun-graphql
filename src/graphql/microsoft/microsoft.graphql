type MicrosoftSku {
  id: String
  name: String
}

type MicrosoftAccount {
  id: String!
  displayName: String
  email: String
  updatedAt: String
  microsoftSkus: [MicrosoftSku]
}

type MicrosoftSubscribedSku {
  id: String!
  qty: Int
  used: Int
  updatedAt: String
  skuId: String
  sku: MicrosoftSku
  clientId: Int
  client: Client
}

type PostResp {
  error: String
  message: String
}

# Inputs
input ReqMSAccount {
  id: String!
  displayName: String
  mail: String
  userPrincipalName: String
  assignedLicenses: [ReqMSAccountSku]
}

input ReqMSAccountSku {
  disabledPlans: [String]
  skuId: String
}

input ReqMSSubscribedSku {
  skuId: String
  accountName: String
  accountId: String
  appliesTo: String
  capabilityStatus: String
  consumedUnits: Int
  id: String
  skuPartNumber: String
  subscriptionIds: [String]
  prepaidUnits: ReqMSSubscribedSkuPrepaidUnits
  servicePlans: [ReqMSSubscribedSkuServicePlan]
}

input ReqMSSubscribedSkuPrepaidUnits {
  enabled: Int
  suspended: Int
  warning: Int
  lockedOut: Int
}

input ReqMSSubscribedSkuServicePlan {
  servicePlanId: String
  servicePlanName: String
  provisioningStatus: String
  appliesTo: String
}

# Schema
type Query {
  microsoftAccount(clientId: Int!): [MicrosoftAccount!]
  microsoftSubscribedSku(clientId: Int!): [MicrosoftSubscribedSku!]
}

type Mutation {
  updateMSAccounts(value: [ReqMSAccount]): PostResp
  updateMSSubscribedSkus(value: [ReqMSSubscribedSku]): PostResp
}

schema {
  query: Query
  mutation: Mutation
}
