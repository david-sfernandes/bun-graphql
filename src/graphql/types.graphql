type User {
  id: ID!
  email: String!
  name: String!
  role: String!
  password: String!
  createdAt: String!
  updatedAt: String!
  clients: [Client!]
}

type Invite {
  id: ID!
  email: String!
  token: String!
  role: String!
  clients: [Client!]
  createdAt: String!
  updatedAt: String!
  expiresAt: String!
}

type Client {
  id: Int!
  name: String!
  companyName: String!
  category: String
  cnpj: String!
  isActive: Boolean
  contractDeviceQty: Int
  updatedAt: String!
  devices: [Device!]
  recomendations: [Recomendation]
  disclaimers: [Disclaimer]
  microsotAccounts: [MicrosoftAccount]
  microsoftSubscribedSkus: [MicrosoftSubscribedSku]
}

type Device {
  id: Int!
  name: String!
  nickname: String
  mac: String!
  brand: String!
  os: String!
  processor: String!
  username: String!
  serial: String!
  model: String!
  type: String!
  isActive: Boolean!
  updatedAt: String!
  syncedAt: String!
  securityStatus: [SecurityStatus]
  securityEvents: [SecurityEvent]
  deviceDetails: DeviceDetail
  clientId: Int!
}

type SecurityStatus {
  id: String!
  name: String
  mac: String
  group: String
  isManaged: Boolean
  isManagedWithBest: Boolean
  syncedAt: String
  deviceId: Int
}

type DeviceDetail {
  id: Int!
  groupId: Int
  ramal: String
  imei1: String
  imei2: String
  domain: String
  totalRam: String
  totalStorage: String
  usedStorage: String
  purchaseDate: String
  warrantyDate: String
  clientVersion: String
  businessUnitId: Int
  businessUnit: BusinessUnit
  updatedAt: String
}

type SecurityEvent {
  id: Int!
  deviceName: String!
  endpoint: String!
  username: String!
  occurrences: Int!
  lastOccurrence: String!
  module: String!
  type: String!
  companyName: String!
  deviceId: Int
}

type Recomendation {
  id: Int!
  text: String!
  createdAt: String!
  updatedAt: String!
  clientId: Int!
}

type Disclaimer {
  id: Int!
  text: String!
  createdAt: String!
  updatedAt: String!
  clientId: Int!
}

type BusinessUnit {
  id: Int!
  description: String
  street: String
  clientId: Int
}

type MicrosoftSku {
  id: String
  name: String
}

type MicrosoftAccount {
  id: Int!
  displayName: String
  email: String
  updatedAt: String
  microsoftSkus: [MicrosoftSku]
}

type MicrosoftSubscribedSku {
  id: String!
  qty: Int
  used: Int
  updatedAt: String
  skuId: String
  sku: MicrosoftSku
  clientId: Int
  client: Client
}

type AuthPayload {
  token: String!
  name: String!
  role: String!
}

type Query {
  user(email: String!): User
  users: [User!]
  clients: [Client!]
  client(id: Int!): Client
  devices(clientId: Int!): [Device!]
  device(id: Int!): Device
  login(email: String!, password: String!): AuthPayload
  securityEvents(clientId: Int!): [SecurityEvent!]
}

type Mutation {
  createUser(email: String, name: String!, password: String): User
  createInvite(email: String!, role: String!, clients: [Int!]): Invite
  createUserWithInvite(email: String!, name: String!, password: String!, token: String!): User
  updatePassword(email: String!, password: String!, newPassword: String!): User
}

schema {
  query: Query
  mutation: Mutation
}
