type User {
  id: ID!
  email: String!
  name: String!
  role: String!
  password: String!
  createdAt: String!
  updatedAt: String!
  clients: [Client!]
}

type Invite {
  id: ID!
  email: String!
  token: String!
  role: String!
  clients: [Client!]
  createdAt: String!
  updatedAt: String!
  expiresAt: String!
}

type Client {
  id: Int!
  name: String!
  companyName: String!
  category: String
  cnpj: String!
  isActive: Boolean
  contractDeviceQty: Int
  updatedAt: String!
  devices: [Device!]
  recomendations: [Recomendation]
  disclaimers: [Disclaimer]
  microsoftAccounts: [MicrosoftAccount]
  microsoftSubscribedSkus: [MicrosoftSubscribedSku]
}

input ReqClient {
  id: Int!
  name: String!
  companyName: String!
  category: String
  cnpj: String!
  isActive: Boolean
  contractDeviceQty: Int
}

type Device {
  id: Int!
  name: String!
  nickname: String
  mac: String!
  brand: String!
  os: String!
  processor: String!
  username: String!
  serial: String!
  model: String!
  type: String!
  isActive: Boolean!
  updatedAt: String!
  syncedAt: String!
  securityStatus: [SecurityStatus]
  securityEvents: [SecurityEvent]
  deviceDetails: DeviceDetail
  clientId: Int!
}

type SecurityStatus {
  id: String!
  name: String
  mac: String
  group: String
  isManaged: Boolean
  isManagedWithBest: Boolean
  syncedAt: String
  deviceId: Int
}

type DeviceDetail {
  id: Int!
  groupId: Int
  ramal: String
  imei1: String
  imei2: String
  domain: String
  totalRam: String
  totalStorage: String
  usedStorage: String
  purchaseDate: String
  warrantyDate: String
  clientVersion: String
  businessUnitId: Int
  businessUnit: BusinessUnit
  updatedAt: String
}

type SecurityEvent {
  id: Int!
  deviceName: String!
  endpoint: String!
  username: String!
  occurrences: Int!
  lastOccurrence: String!
  module: String!
  type: String!
  companyName: String!
  deviceId: Int
}

type Recomendation {
  id: Int!
  text: String!
  createdAt: String!
  updatedAt: String!
  clientId: Int!
}

type Disclaimer {
  id: Int!
  text: String!
  createdAt: String!
  updatedAt: String!
  clientId: Int!
}

type BusinessUnit {
  id: Int!
  description: String
  street: String
  clientId: Int
}

type MicrosoftSku {
  id: String
  name: String
}

type MicrosoftAccount {
  id: String!
  displayName: String
  email: String
  updatedAt: String
  microsoftSkus: [MicrosoftSku]
}

type MicrosoftSubscribedSku {
  id: String!
  qty: Int
  used: Int
  updatedAt: String
  skuId: String
  sku: MicrosoftSku
  clientId: Int
  client: Client
}

type Ticket {
  id: Int!
  tipo_ticket: String
  categoria_primaria: String
  categoria_secundaria: String
  total_avaliacao: Int
  tecnico: String
  mesa_trabalho: String
  data_solucao: String
  dispositivo_vinculado: String
  data_resposta: String
  setor: String
  prioridade: String
  codigo: Int
  cliente: String
  assunto: String
  contato: String
  data_criacao: String
  total_horas: String
  origem: String
  status: String
  urgencia: String
  status_sla_resposta: String
  sla_resposta_tempo: String
  status_sla_solucao: String
  sla_solucao_tempo: String
}

type AuthPayload {
  token: String!
  name: String!
  role: String!
}

type Query {
  user(email: String!): User
  users: [User!]
  clients: [Client!]
  client(id: Int!): Client
  devices(clientId: Int!, typeFilter: [String]): [Device!]
  device(id: Int!): Device
  tickets(clientId: Int!): [Ticket!]
  login(email: String!, password: String!): AuthPayload
  securityEvents(clientId: Int!): [SecurityEvent!]
  microsoftAccount(clientId: Int!): [MicrosoftAccount!]
  microsoftSubscribedSku(clientId: Int!): [MicrosoftSubscribedSku!]
}

type Mutation {
  createUser(email: String, name: String!, password: String): User
  createInvite(email: String!, role: String!, clients: [Int!]): Invite
  createUserWithInvite(
    email: String!
    name: String!
    password: String!
    token: String!
  ): User
  updatePassword(email: String!, password: String!, newPassword: String!): User
  createRecomendation(text: String!, clientId: Int!): Recomendation
  createDisclaimer(text: String!, clientId: Int!): Disclaimer
  updateRecomendation(id: Int!, text: String!): Recomendation
  updateDisclaimer(id: Int!, text: String!): Disclaimer
  updateClient(client: ReqClient!): Client
  deleteRecomendation(id: Int!): Recomendation
  deleteDisclaimer(id: Int!): Disclaimer
}

schema {
  query: Query
  mutation: Mutation
}
