// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CLIENT
  ADMIN
  TECHNICIAN
  MANAGER
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(CLIENT)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id                Int      @id
  name              String
  companyName       String
  category          String   @default("D") @db.Char(1)
  cnpj              String
  isActive          Boolean  @default(false)
  contractDeviceQty Int      @default(0)
  updatedAt         DateTime @updatedAt

  businessUnits           BusinessUnit[]
  devices                 Device[]
  recomendations          Recomendation[]
  disclaimers             Disclaimer[]
  microsotAccounts        MicrosoftAccount[]
  microsoftSubscribedSkus MicrosoftSubscribedSku[]
}

model Device {
  id        Int      @id
  name      String
  nickname  String
  mac       String
  brand     String
  os        String
  processor String
  username  String
  serial    String
  model     String
  type      String
  isActive  Boolean
  updatedAt DateTime @updatedAt
  syncedAt  DateTime @default(now())

  securityStatus SecurityStatus[]
  deviceDetail   DeviceDetail?

  clientId Int
  client   Client @relation(fields: [clientId], references: [id])
}

model SecurityStatus {
  id                Int      @id
  name              String
  mac               String
  group             String
  isManaged         Boolean
  isManagedWithBest Boolean
  syncedAt          DateTime @default(now())

  deviceId Int
  device   Device @relation(fields: [deviceId], references: [id])
}

model DeviceDetail {
  id        Int      @id
  name      String
  value     String
  updatedAt DateTime @updatedAt

  deviceId Int    @unique
  device   Device @relation(fields: [deviceId], references: [id])
}

model SecurityEvent {
  id             Int      @id @default(autoincrement())
  deviceName     String
  endpoint       String
  username       String
  occurrences    Int
  lastOccurrence DateTime
  module         String
  type           String
  companyName    String
}

model Recomendation {
  id        Int      @id
  text      String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clientId Int    @unique
  client   Client @relation(fields: [clientId], references: [id])
}

model Disclaimer {
  id        Int      @id
  text      String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clientId Int    @unique
  client   Client @relation(fields: [clientId], references: [id])
}

model BusinessUnit {
  id          Int     @id
  description String
  street      Boolean

  clientId Int    @unique
  Client   Client @relation(fields: [clientId], references: [id])
}

model MicrosoftSku {
  id   String @id
  name String

  microsoftAccounts       MicrosoftAccount[]
  microsoftSubscribedSkus MicrosoftSubscribedSku[]
}

model MicrosoftAccount {
  id          String   @id
  displayName String
  email       String
  updatedAt   DateTime @updatedAt

  microsoftSkus MicrosoftSku[]

  clientId Int
  client   Client @relation(fields: [clientId], references: [id])
}

model MicrosoftSubscribedSku {
  id        String   @id @default(cuid())
  qty       Int
  used      Int
  updatedAt DateTime @updatedAt

  skuId    String
  sku      MicrosoftSku @relation(fields: [skuId], references: [id])
  clientId Int
  client   Client       @relation(fields: [clientId], references: [id])
}
