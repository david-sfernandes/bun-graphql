// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CLIENT
  ADMIN
  TECHNICIAN
  MANAGER
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(CLIENT)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clients   Client[]
}

model Invite {
  id        String    @id @default(cuid())
  email     String    @unique
  token     String    @unique
  role      Role
  usedAt    DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expiresAt DateTime  @default(dbgenerated("NOW() + interval '7 days'"))
  clients   Client[]
}

model Client {
  id                      Int                      @id
  name                    String
  companyName             String
  category                String                   @default("D") @db.Char(1)
  cnpj                    String
  isActive                Boolean                  @default(false)
  contractDeviceQty       Int                      @default(0)
  updatedAt               DateTime                 @updatedAt
  businessUnits           BusinessUnit[]
  devices                 Device[]
  recomendations          Recomendation[]
  disclaimers             Disclaimer[]
  microsotAccounts        MicrosoftAccount[]
  microsoftSubscribedSkus MicrosoftSubscribedSku[]
  invites                 Invite[]
  users                   User[]
}

model Device {
  id             Int              @id
  name           String
  nickname       String
  mac            String
  brand          String
  os             String
  processor      String
  username       String
  serial         String
  model          String
  type           String
  isActive       Boolean
  updatedAt      DateTime         @updatedAt
  syncedAt       DateTime         @default(now())
  securityStatus SecurityStatus[]
  securityEvents SecurityEvent[]
  deviceDetail   DeviceDetail?
  clientId       Int
  client         Client           @relation(fields: [clientId], references: [id])
}

model SecurityStatus {
  id                String   @id
  name              String
  mac               String
  group             String
  isManaged         Boolean
  isManagedWithBest Boolean
  syncedAt          DateTime @default(now())
  deviceId          Int?
  device            Device?  @relation(fields: [deviceId], references: [id])
}

model DeviceDetail {
  id             Int           @id @default(autoincrement())
  groupId        Int?
  ramal          String
  imei1          String
  imei2          String
  domain         String
  totalRam       String
  totalStorage   String
  usedStorage    String
  purchaseDate   DateTime?
  warrantyDate   DateTime?
  clientVersion  String
  businessUnitId Int?
  businessUnit   BusinessUnit? @relation(fields: [businessUnitId], references: [id])
  updatedAt      DateTime      @updatedAt
  device         Device?       @relation(fields: [id], references: [id])
}

model SecurityEvent {
  id             Int      @id @default(autoincrement())
  deviceName     String
  endpoint       String
  username       String
  occurrences    Int
  lastOccurrence DateTime
  module         String
  type           String
  companyName    String
  device         Device?  @relation(fields: [deviceId], references: [id])
  deviceId       Int?
}

model Recomendation {
  id        Int      @id @default(autoincrement())
  text      String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clientId  Int      @unique
  client    Client   @relation(fields: [clientId], references: [id])
}

model Disclaimer {
  id        Int      @id @default(autoincrement())
  text      String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clientId  Int      @unique
  client    Client   @relation(fields: [clientId], references: [id])
}

model BusinessUnit {
  id            Int            @id
  description   String
  street        String
  clientId      Int
  client        Client         @relation(fields: [clientId], references: [id])
  deviceDetails DeviceDetail[]
}

model MicrosoftSku {
  id                      String                   @id
  name                    String
  microsoftAccounts       MicrosoftAccount[]
  microsoftSubscribedSkus MicrosoftSubscribedSku[]
}

model MicrosoftAccount {
  id            String         @id
  displayName   String
  email         String
  updatedAt     DateTime       @updatedAt
  microsoftSkus MicrosoftSku[]
  clientId      Int
  client        Client         @relation(fields: [clientId], references: [id])
}

model MicrosoftSubscribedSku {
  id        String       @id @default(cuid())
  qty       Int
  used      Int
  updatedAt DateTime     @updatedAt
  skuId     String
  sku       MicrosoftSku @relation(fields: [skuId], references: [id])
  clientId  Int
  client    Client       @relation(fields: [clientId], references: [id])
}
